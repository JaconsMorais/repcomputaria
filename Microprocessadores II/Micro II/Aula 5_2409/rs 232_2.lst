CCS PCM C Compiler, Version 4.032, 62930               24-set-09 22:44

               Filename: C:\Users\cn208000706\Documents\Micro II\Aula 5_2409\rs 232_2.lst

               ROM used: 155 words (2%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         9 (2%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   031
0003:  NOP
.................... #include ".\rs 232_2.h" 
.................... #include <16F876A.h> 
.................... //////// Standard Header file for the PIC16F876A device //////////////// 
.................... #device PIC16F876A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES XT                       //Crystal osc <= 4mhz 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES WRT_50%                  //Lower half of Program Memory is Write Protected 
....................  
.................... #use delay(clock=20000000) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   017
000A:  MOVLW  06
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  7B
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  DECFSZ 00,F
0016:  GOTO   00A
0017:  RETLW  00
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
.................... #BYTE PORT_A = 0x05 
.................... #BYTE PORT_B = 0x06 
.................... #BYTE PORT_C = 0x07 
....................  
.................... #BYTE TRIS_B = 0x86 
....................  
.................... #BIT LED = PORT_B.0 
....................  
.................... #BIT TX = PORT_C.6 
.................... #BIT RX = PORT_C.7 
....................  
.................... #BYTE TXIF = 0x0C 
.................... #BYTE TRMT = 0x98 
.................... #BYTE TXREG = 0x19 
....................  
.................... #BYTE RCIF = 0x0C 
.................... #BYTE RCIE = 0x8C 
.................... #BYTE RCSTA = 0x18 
.................... #BYTE CREN = 0x18 
....................  
.................... #BIT FLAG = RCSTA.9 
....................  
.................... int verificaFlag(void); 
.................... void enviaByte(char palavra); 
.................... int recebeByte(void); 
....................  
....................  
....................  
.................... void main() 
.................... { 
*
0031:  CLRF   04
0032:  BCF    03.7
0033:  MOVLW  1F
0034:  ANDWF  03,F
0035:  MOVLW  81
0036:  BSF    03.5
0037:  MOVWF  19
0038:  MOVLW  A6
0039:  MOVWF  18
003A:  MOVLW  90
003B:  BCF    03.5
003C:  MOVWF  18
003D:  BSF    03.5
003E:  BSF    1F.0
003F:  BSF    1F.1
0040:  BSF    1F.2
0041:  BCF    1F.3
0042:  MOVLW  07
0043:  MOVWF  1C
....................     
....................    setup_adc_ports(NO_ANALOGS); 
*
0047:  BSF    03.5
0048:  BSF    1F.0
0049:  BSF    1F.1
004A:  BSF    1F.2
004B:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
004C:  BCF    03.5
004D:  BCF    1F.0
....................    setup_spi(SPI_SS_DISABLED); 
*
0044:  MOVLW  FF
0045:  BCF    03.5
0046:  MOVWF  20
*
004E:  BCF    14.5
004F:  BCF    20.5
0050:  MOVF   20,W
0051:  BSF    03.5
0052:  MOVWF  07
0053:  BCF    03.5
0054:  BSF    20.4
0055:  MOVF   20,W
0056:  BSF    03.5
0057:  MOVWF  07
0058:  BCF    03.5
0059:  BCF    20.3
005A:  MOVF   20,W
005B:  BSF    03.5
005C:  MOVWF  07
005D:  MOVLW  01
005E:  BCF    03.5
005F:  MOVWF  14
0060:  MOVLW  00
0061:  BSF    03.5
0062:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0063:  MOVF   01,W
0064:  ANDLW  C7
0065:  IORLW  08
0066:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
0067:  BCF    03.5
0068:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0069:  MOVLW  00
006A:  MOVWF  78
006B:  MOVWF  12
006C:  MOVLW  00
006D:  BSF    03.5
006E:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
006F:  MOVLW  07
0070:  MOVWF  1C
0071:  MOVF   05,W
0072:  MOVLW  10
0073:  MOVWF  77
0074:  DECFSZ 77,F
0075:  GOTO   074
0076:  NOP
0077:  MOVF   1C,W
0078:  BCF    03.5
0079:  BCF    0D.6
....................    setup_vref(FALSE); 
007A:  BSF    03.5
007B:  CLRF   1D
....................     
....................    TX = 0; 
007C:  BCF    03.5
007D:  BCF    07.6
....................    RX = 1; 
007E:  BSF    07.7
....................     
....................    TRIS_B = 0x00; 
007F:  BSF    03.5
0080:  CLRF   06
....................     
....................    while(1) 
....................    { 
....................       //putc(getc()); 
....................       LED = 1; 
0081:  BCF    03.5
0082:  BSF    06.0
....................       delay_ms(300); 
0083:  MOVLW  02
0084:  MOVWF  21
0085:  MOVLW  96
0086:  MOVWF  22
0087:  CALL   004
0088:  DECFSZ 21,F
0089:  GOTO   085
....................        
....................       LED = 0; 
008A:  BCF    06.0
....................       delay_ms(300); 
008B:  MOVLW  02
008C:  MOVWF  21
008D:  MOVLW  96
008E:  MOVWF  22
008F:  CALL   004
0090:  DECFSZ 21,F
0091:  GOTO   08D
....................        
....................       if(verificaFlag()) 
0092:  GOTO   018
0093:  MOVF   78,F
0094:  BTFSC  03.2
0095:  GOTO   099
....................       { 
....................          //if(recebeByte()) 
....................             enviaByte('T'); 
0096:  MOVLW  54
0097:  MOVWF  21
0098:  GOTO   02C
....................       }       
....................    } 
0099:  GOTO   082
.................... } 
....................  
.................... int verificaFlag(void) 
.................... { 
009A:  SLEEP
....................    if(TXIF && TRMT) 
*
0018:  MOVF   0C,F
0019:  BTFSC  03.2
001A:  GOTO   025
001B:  BSF    03.5
001C:  MOVF   18,F
001D:  BTFSS  03.2
001E:  GOTO   021
001F:  BCF    03.5
0020:  GOTO   025
....................    { 
....................       return 1;  
0021:  MOVLW  01
0022:  MOVWF  78
0023:  GOTO   028
0024:  BCF    03.5
....................    } 
....................    return 0; 
0025:  MOVLW  00
0026:  MOVWF  78
0027:  BSF    03.5
.................... } 
0028:  BCF    03.5
0029:  BCF    0A.3
002A:  BCF    0A.4
002B:  GOTO   093 (RETURN)
....................  
.................... int recebeByte(void) 
.................... { 
....................    CREN = 1; 
....................    RCIF = 1; 
....................     
....................    if(FLAG) 
....................    { 
....................       return 1; 
....................    } 
....................    CREN = 0; 
....................    return 0; 
....................     
.................... } 
....................  
.................... void enviaByte(char palavra) 
.................... { 
....................    TXREG = palavra; 
002C:  MOVF   21,W
002D:  MOVWF  19
.................... } 
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   099 (RETURN)
....................  
....................  

Configuration Fuses:
   Word  1: 3939   XT NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD WRT_50%
