
package ELearning.services.client.aluno;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AlunoService", targetNamespace = "http://services.ELearning/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AlunoService {


    /**
     * 
     * @param newStudent
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cadastrarAluno", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.CadastrarAluno")
    @ResponseWrapper(localName = "cadastrarAlunoResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.CadastrarAlunoResponse")
    @Action(input = "http://services.ELearning/AlunoService/cadastrarAlunoRequest", output = "http://services.ELearning/AlunoService/cadastrarAlunoResponse")
    public boolean cadastrarAluno(
        @WebParam(name = "newStudent", targetNamespace = "")
        Aluno newStudent);

    /**
     * 
     * @param student
     * @return
     *     returns java.util.List<ELearning.services.client.aluno.Aluno>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "procurarAluno", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.ProcurarAluno")
    @ResponseWrapper(localName = "procurarAlunoResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.ProcurarAlunoResponse")
    @Action(input = "http://services.ELearning/AlunoService/procurarAlunoRequest", output = "http://services.ELearning/AlunoService/procurarAlunoResponse")
    public List<Aluno> procurarAluno(
        @WebParam(name = "student", targetNamespace = "")
        Aluno student);

    /**
     * 
     * @param oldStudent
     * @param newStudent
     * @return
     *     returns ELearning.services.client.aluno.Aluno
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editarAluno", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.EditarAluno")
    @ResponseWrapper(localName = "editarAlunoResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.EditarAlunoResponse")
    @Action(input = "http://services.ELearning/AlunoService/editarAlunoRequest", output = "http://services.ELearning/AlunoService/editarAlunoResponse")
    public Aluno editarAluno(
        @WebParam(name = "oldStudent", targetNamespace = "")
        Aluno oldStudent,
        @WebParam(name = "newStudent", targetNamespace = "")
        Aluno newStudent);

    /**
     * 
     * @param student
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletarAluno", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.DeletarAluno")
    @ResponseWrapper(localName = "deletarAlunoResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.DeletarAlunoResponse")
    @Action(input = "http://services.ELearning/AlunoService/deletarAlunoRequest", output = "http://services.ELearning/AlunoService/deletarAlunoResponse")
    public boolean deletarAluno(
        @WebParam(name = "student", targetNamespace = "")
        Aluno student);

    /**
     * 
     * @param student
     * @return
     *     returns java.util.List<ELearning.services.client.aluno.StudentEnrollmentModel>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "procurarMatriculasNaoFeitas", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.ProcurarMatriculasNaoFeitas")
    @ResponseWrapper(localName = "procurarMatriculasNaoFeitasResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.aluno.ProcurarMatriculasNaoFeitasResponse")
    @Action(input = "http://services.ELearning/AlunoService/procurarMatriculasNaoFeitasRequest", output = "http://services.ELearning/AlunoService/procurarMatriculasNaoFeitasResponse")
    public List<StudentEnrollmentModel> procurarMatriculasNaoFeitas(
        @WebParam(name = "student", targetNamespace = "")
        Aluno student);

}
