
package ELearning.services.client.nota;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NotaService", targetNamespace = "http://services.ELearning/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NotaService {


    /**
     * 
     * @param newGrade
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cadastrarNota", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.nota.CadastrarNota")
    @ResponseWrapper(localName = "cadastrarNotaResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.nota.CadastrarNotaResponse")
    @Action(input = "http://services.ELearning/NotaService/cadastrarNotaRequest", output = "http://services.ELearning/NotaService/cadastrarNotaResponse")
    public boolean cadastrarNota(
        @WebParam(name = "newGrade", targetNamespace = "")
        Nota newGrade);

    /**
     * 
     * @param grade
     * @return
     *     returns java.util.List<ELearning.services.client.nota.Nota>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "procurarNota", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.nota.ProcurarNota")
    @ResponseWrapper(localName = "procurarNotaResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.nota.ProcurarNotaResponse")
    @Action(input = "http://services.ELearning/NotaService/procurarNotaRequest", output = "http://services.ELearning/NotaService/procurarNotaResponse")
    public List<Nota> procurarNota(
        @WebParam(name = "grade", targetNamespace = "")
        Nota grade);

    /**
     * 
     * @param oldGrade
     * @param newGrade
     * @return
     *     returns ELearning.services.client.nota.Nota
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editarNota", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.nota.EditarNota")
    @ResponseWrapper(localName = "editarNotaResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.nota.EditarNotaResponse")
    @Action(input = "http://services.ELearning/NotaService/editarNotaRequest", output = "http://services.ELearning/NotaService/editarNotaResponse")
    public Nota editarNota(
        @WebParam(name = "oldGrade", targetNamespace = "")
        Nota oldGrade,
        @WebParam(name = "newGrade", targetNamespace = "")
        Nota newGrade);

    /**
     * 
     * @param grade
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletarNota", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.nota.DeletarNota")
    @ResponseWrapper(localName = "deletarNotaResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.nota.DeletarNotaResponse")
    @Action(input = "http://services.ELearning/NotaService/deletarNotaRequest", output = "http://services.ELearning/NotaService/deletarNotaResponse")
    public boolean deletarNota(
        @WebParam(name = "grade", targetNamespace = "")
        Nota grade);

}
