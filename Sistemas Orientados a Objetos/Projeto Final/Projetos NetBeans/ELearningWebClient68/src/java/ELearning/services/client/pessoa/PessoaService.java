
package ELearning.services.client.pessoa;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PessoaService", targetNamespace = "http://services.ELearning/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PessoaService {


    /**
     * 
     * @param newPerson
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cadastrarPessoa", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.pessoa.CadastrarPessoa")
    @ResponseWrapper(localName = "cadastrarPessoaResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.pessoa.CadastrarPessoaResponse")
    @Action(input = "http://services.ELearning/PessoaService/cadastrarPessoaRequest", output = "http://services.ELearning/PessoaService/cadastrarPessoaResponse")
    public boolean cadastrarPessoa(
        @WebParam(name = "newPerson", targetNamespace = "")
        Pessoa newPerson);

    /**
     * 
     * @param oldPerson
     * @param newPerson
     * @return
     *     returns ELearning.services.client.pessoa.Pessoa
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editarPessoa", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.pessoa.EditarPessoa")
    @ResponseWrapper(localName = "editarPessoaResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.pessoa.EditarPessoaResponse")
    @Action(input = "http://services.ELearning/PessoaService/editarPessoaRequest", output = "http://services.ELearning/PessoaService/editarPessoaResponse")
    public Pessoa editarPessoa(
        @WebParam(name = "oldPerson", targetNamespace = "")
        Pessoa oldPerson,
        @WebParam(name = "newPerson", targetNamespace = "")
        Pessoa newPerson);

    /**
     * 
     * @param person
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletarPessoa", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.pessoa.DeletarPessoa")
    @ResponseWrapper(localName = "deletarPessoaResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.pessoa.DeletarPessoaResponse")
    @Action(input = "http://services.ELearning/PessoaService/deletarPessoaRequest", output = "http://services.ELearning/PessoaService/deletarPessoaResponse")
    public boolean deletarPessoa(
        @WebParam(name = "person", targetNamespace = "")
        Pessoa person);

    /**
     * 
     * @param person
     * @return
     *     returns java.util.List<ELearning.services.client.pessoa.Pessoa>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "procurarPessoa", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.pessoa.ProcurarPessoa")
    @ResponseWrapper(localName = "procurarPessoaResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.pessoa.ProcurarPessoaResponse")
    @Action(input = "http://services.ELearning/PessoaService/procurarPessoaRequest", output = "http://services.ELearning/PessoaService/procurarPessoaResponse")
    public List<Pessoa> procurarPessoa(
        @WebParam(name = "person", targetNamespace = "")
        Pessoa person);

}
