
package ELearning.services.client.usuario;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UsuarioService", targetNamespace = "http://services.ELearning/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface UsuarioService {


    /**
     * 
     * @param loginUser
     * @return
     *     returns ELearning.services.client.usuario.Usuario
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "validaLogin", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.ValidaLogin")
    @ResponseWrapper(localName = "validaLoginResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.ValidaLoginResponse")
    @Action(input = "http://services.ELearning/UsuarioService/validaLoginRequest", output = "http://services.ELearning/UsuarioService/validaLoginResponse")
    public Usuario validaLogin(
        @WebParam(name = "loginUser", targetNamespace = "")
        Usuario loginUser);

    /**
     * 
     * @param newUser
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cadastrarUsuario", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.CadastrarUsuario")
    @ResponseWrapper(localName = "cadastrarUsuarioResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.CadastrarUsuarioResponse")
    @Action(input = "http://services.ELearning/UsuarioService/cadastrarUsuarioRequest", output = "http://services.ELearning/UsuarioService/cadastrarUsuarioResponse")
    public boolean cadastrarUsuario(
        @WebParam(name = "newUser", targetNamespace = "")
        Usuario newUser);

    /**
     * 
     * @param oldUser
     * @param newUser
     * @return
     *     returns ELearning.services.client.usuario.Usuario
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editarUsuario", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.EditarUsuario")
    @ResponseWrapper(localName = "editarUsuarioResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.EditarUsuarioResponse")
    @Action(input = "http://services.ELearning/UsuarioService/editarUsuarioRequest", output = "http://services.ELearning/UsuarioService/editarUsuarioResponse")
    public Usuario editarUsuario(
        @WebParam(name = "oldUser", targetNamespace = "")
        Usuario oldUser,
        @WebParam(name = "newUser", targetNamespace = "")
        Usuario newUser);

    /**
     * 
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deletarUsuario", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.DeletarUsuario")
    @ResponseWrapper(localName = "deletarUsuarioResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.DeletarUsuarioResponse")
    @Action(input = "http://services.ELearning/UsuarioService/deletarUsuarioRequest", output = "http://services.ELearning/UsuarioService/deletarUsuarioResponse")
    public boolean deletarUsuario(
        @WebParam(name = "user", targetNamespace = "")
        Usuario user);

    /**
     * 
     * @param user
     * @return
     *     returns java.util.List<ELearning.services.client.usuario.Usuario>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "procurarUsuario", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.ProcurarUsuario")
    @ResponseWrapper(localName = "procurarUsuarioResponse", targetNamespace = "http://services.ELearning/", className = "ELearning.services.client.usuario.ProcurarUsuarioResponse")
    @Action(input = "http://services.ELearning/UsuarioService/procurarUsuarioRequest", output = "http://services.ELearning/UsuarioService/procurarUsuarioResponse")
    public List<Usuario> procurarUsuario(
        @WebParam(name = "user", targetNamespace = "")
        Usuario user);

}
