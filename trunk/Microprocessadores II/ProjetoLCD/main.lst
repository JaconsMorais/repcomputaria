CCS PCM C Compiler, Version 4.032, 62930               17-set-09 22:31

               Filename: D:\Micro II\ProjetoLCD\main.lst

               ROM used: 176 words (2%)
                         Largest free fragment is 2048
               RAM used: 8 (2%) at main() level
                         9 (2%) worst case
               Stack:    4 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   059
0003:  NOP
.................... #include "D:\Micro II\ProjetoLCD\main.h" 
.................... #include <16F876A.h> 
.................... //////// Standard Header file for the PIC16F876A device //////////////// 
.................... #device PIC16F876A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES XT                       //Crystal osc <= 4mhz 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES WRT_50%                  //Lower half of Program Memory is Write Protected 
....................  
.................... #use delay(clock=4000000) 
*
0009:  MOVLW  22
000A:  MOVWF  04
000B:  BCF    03.7
000C:  MOVF   00,W
000D:  BTFSC  03.2
000E:  GOTO   01D
000F:  MOVLW  01
0010:  MOVWF  78
0011:  CLRF   77
0012:  DECFSZ 77,F
0013:  GOTO   012
0014:  DECFSZ 78,F
0015:  GOTO   011
0016:  MOVLW  4A
0017:  MOVWF  77
0018:  DECFSZ 77,F
0019:  GOTO   018
001A:  GOTO   01B
001B:  DECFSZ 00,F
001C:  GOTO   00F
001D:  RETLW  00
.................... //#use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
.................... //registrador de leitura e escrita 
.................... #BYTE PORTA_A = 0x05 
.................... #BYTE PORTA_B = 0x06 
.................... #BYTE PORTA_C = 0x07 
....................  
.................... #BYTE TRIS_A = 0x85 
.................... #BYTE TRIS_B = 0x86 // saida de dados 
.................... #BYTE TRIS_C = 0x87 // entrada de dados 
....................  
.................... #BIT RW = PORTA_B.1 
.................... #BIT RS = PORTA_B.2 
.................... #BIT E = PORTA_B.0  
.................... #BIT BF = PORTA_C.7 
....................  
....................  
....................  
....................  
....................  
.................... void clock(){ 
....................    E = 1; 
*
0004:  BSF    06.0
....................    delay_cycles(1); 
0005:  NOP
....................    E = 0; 
0006:  BCF    06.0
....................    delay_cycles(1); 
0007:  NOP
....................  
.................... } 
0008:  RETLW  00
....................  
.................... void verificaBF(void) 
.................... { 
....................    TRIS_C = 0xff; 
*
001E:  MOVLW  FF
001F:  BSF    03.5
0020:  MOVWF  07
....................    RW = 1; 
0021:  BCF    03.5
0022:  BSF    06.1
....................    delay_ms (1); 
0023:  MOVLW  01
0024:  MOVWF  22
0025:  CALL   009
....................  
....................    while(BF); 
0026:  BTFSC  07.7
0027:  GOTO   026
....................     
....................    TRIS_C = 0x00; 
0028:  BSF    03.5
0029:  CLRF   07
....................    RW = 0; 
002A:  BCF    03.5
002B:  BCF    06.1
....................    delay_ms (1); 
002C:  MOVLW  01
002D:  MOVWF  22
002E:  CALL   009
.................... } 
002F:  RETLW  00
....................  
....................  
.................... void EscreveInstr (char Instr) 
.................... { 
....................    RS = 0; 
0030:  BCF    06.2
....................     
....................    PORTA_C = instr; 
0031:  MOVF   21,W
0032:  MOVWF  07
....................    clock (); 
0033:  CALL   004
....................    verificaBF (); 
0034:  CALL   01E
.................... } 
0035:  RETLW  00
....................  
....................  
.................... void EscreveDado (char dado) 
.................... { 
....................    RS = 1; 
*
0051:  BSF    06.2
....................     
....................    PORTA_C = dado; 
0052:  MOVF   21,W
0053:  MOVWF  07
....................    clock (); 
0054:  CALL   004
....................    verificaBF (); 
0055:  CALL   01E
.................... } 
0056:  BCF    0A.3
0057:  BCF    0A.4
0058:  GOTO   0A4 (RETURN)
....................  
.................... void initLCD(){ 
....................     
....................    TRIS_C = 0x00; 
*
0036:  BSF    03.5
0037:  CLRF   07
....................    RW = 0; 
0038:  BCF    03.5
0039:  BCF    06.1
....................    RS = 0; 
003A:  BCF    06.2
....................     
....................    PORTA_C = 0x38; //inicializa 
003B:  MOVLW  38
003C:  MOVWF  07
....................    clock(); 
003D:  CALL   004
....................    delay_ms (15); 
003E:  MOVLW  0F
003F:  MOVWF  22
0040:  CALL   009
....................  
....................    clock(); 
0041:  CALL   004
....................    delay_ms (15); 
0042:  MOVLW  0F
0043:  MOVWF  22
0044:  CALL   009
....................  
....................    EscreveInstr (0x06); 
0045:  MOVLW  06
0046:  MOVWF  21
0047:  CALL   030
....................    EscreveInstr (0x0e); 
0048:  MOVLW  0E
0049:  MOVWF  21
004A:  CALL   030
....................    EscreveInstr (0x01); 
004B:  MOVLW  01
004C:  MOVWF  21
004D:  CALL   030
....................     
....................     
.................... } 
004E:  BCF    0A.3
004F:  BCF    0A.4
0050:  GOTO   0A1 (RETURN)
....................  
....................     
....................   
.................... void main() 
.................... { 
*
0059:  CLRF   04
005A:  BCF    03.7
005B:  MOVLW  1F
005C:  ANDWF  03,F
005D:  BSF    03.5
005E:  BSF    1F.0
005F:  BSF    1F.1
0060:  BSF    1F.2
0061:  BCF    1F.3
0062:  MOVLW  07
0063:  MOVWF  1C
....................  
....................    setup_adc_ports(NO_ANALOGS); 
*
0067:  BSF    03.5
0068:  BSF    1F.0
0069:  BSF    1F.1
006A:  BSF    1F.2
006B:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
006C:  BCF    03.5
006D:  BCF    1F.0
....................    setup_spi(SPI_SS_DISABLED); 
*
0064:  MOVLW  FF
0065:  BCF    03.5
0066:  MOVWF  20
*
006E:  BCF    14.5
006F:  BCF    20.5
0070:  MOVF   20,W
0071:  BSF    03.5
0072:  MOVWF  07
0073:  BCF    03.5
0074:  BSF    20.4
0075:  MOVF   20,W
0076:  BSF    03.5
0077:  MOVWF  07
0078:  BCF    03.5
0079:  BCF    20.3
007A:  MOVF   20,W
007B:  BSF    03.5
007C:  MOVWF  07
007D:  MOVLW  01
007E:  BCF    03.5
007F:  MOVWF  14
0080:  MOVLW  00
0081:  BSF    03.5
0082:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0083:  MOVF   01,W
0084:  ANDLW  C7
0085:  IORLW  08
0086:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
0087:  BCF    03.5
0088:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0089:  MOVLW  00
008A:  MOVWF  78
008B:  MOVWF  12
008C:  MOVLW  00
008D:  BSF    03.5
008E:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
008F:  MOVLW  07
0090:  MOVWF  1C
0091:  MOVF   05,W
0092:  MOVLW  03
0093:  MOVWF  77
0094:  DECFSZ 77,F
0095:  GOTO   094
0096:  MOVF   1C,W
0097:  BCF    03.5
0098:  BCF    0D.6
....................    setup_vref(FALSE); 
0099:  BSF    03.5
009A:  CLRF   1D
....................  
....................    // TODO: USER CODE!! 
....................     
....................    TRIS_A = 0xFF; 
009B:  MOVLW  FF
009C:  MOVWF  05
....................    TRIS_B = 0x00; 
009D:  CLRF   06
....................    TRIS_C = 0xFF; 
009E:  MOVWF  07
....................     
....................    initLCD(); 
009F:  BCF    03.5
00A0:  GOTO   036
....................     
....................    EscreveDado ('S'); 
00A1:  MOVLW  53
00A2:  MOVWF  21
00A3:  GOTO   051
....................    delay_ms (1000); 
00A4:  MOVLW  04
00A5:  MOVWF  21
00A6:  MOVLW  FA
00A7:  MOVWF  22
00A8:  CALL   009
00A9:  DECFSZ 21,F
00AA:  GOTO   0A6
....................    EscreveInstr (0x01); 
00AB:  MOVLW  01
00AC:  MOVWF  21
00AD:  CALL   030
....................     
....................    while (TRUE) 
....................    { 
....................  
....................    } 
00AE:  GOTO   0AE
....................  
....................     
....................  
.................... } 
00AF:  SLEEP

Configuration Fuses:
   Word  1: 3939   XT NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD WRT_50%
